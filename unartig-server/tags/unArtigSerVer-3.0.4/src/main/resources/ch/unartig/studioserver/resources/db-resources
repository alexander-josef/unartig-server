--
-- list product sales for each quantity and product (still needed???)
--
CREATE OR REPLACE VIEW reportproductsales AS
 SELECT DISTINCT event.longtitle AS event, album.longtitle AS album, album.genericlevelid AS albumid, prod.oipsname AS produktname, prod.productid, count(prod.productid) AS count, oi.quantity
   FROM orderitems oi
   JOIN photos p ON p.photoid = oi.photoid
   JOIN products prod ON oi.productid = prod.productid
   JOIN genericlevels album ON p.albumid = album.genericlevelid
   JOIN genericlevels event ON album.eventid = event.genericlevelid
  GROUP BY event.longtitle, album.longtitle, prod.oipsname, prod.productid, oi.quantity, album.genericlevelid
  ORDER BY event.longtitle, album.longtitle, album.genericlevelid, prod.oipsname, prod.productid, count(prod.productid), oi.quantity;

ALTER TABLE reportproductsales OWNER TO unartig;

--
-- view for counting product sales per album (for each day) (for each order ????)
-- todo digital items?
--
    drop view vReportProdCount cascade;
    CREATE OR REPLACE VIEW vReportProdCount as
    select distinct customer.lastname,customer.country as "country",event.longtitle as "event",album.navtitle as "album",album.genericlevelid as "albumid",quantity, orders.uploadcompleteddate as "date", orders.orderid as "orderid",
    CASE WHEN prod.productid=1 THEN count(prod.productid) ELSE 0    END as "10-er_1",
    CASE WHEN prod.productid=2 THEN count(prod.productid) ELSE 0    END as "10-er_2",
    CASE WHEN prod.productid=3 THEN count(prod.productid) ELSE 0    END as "11-er_1",
    CASE WHEN prod.productid=4 THEN count(prod.productid) ELSE 0    END as "11-er_2",
    CASE WHEN prod.productid=5 THEN count(prod.productid) ELSE 0    END as "13-er_1",
    CASE WHEN prod.productid=6 THEN count(prod.productid) ELSE 0    END as "13-er_2",
    CASE WHEN prod.productid=7 THEN count(prod.productid) ELSE 0    END as "20-er_1",
    CASE WHEN prod.productid=8 THEN count(prod.productid) ELSE 0    END as "20-er_2",
    CASE WHEN prod.productid=9 THEN count(prod.productid) ELSE 0    END as "30x45_1",
    CASE WHEN prod.productid=10 THEN count(prod.productid) ELSE 0    END as "30x45_2",
    CASE WHEN prod.productid=11 THEN count(prod.productid) ELSE 0    END as "40x60_1",
    CASE WHEN prod.productid=12 THEN count(prod.productid) ELSE 0    END as "40x60_2",
    CASE WHEN prod.productid=13 THEN count(prod.productid) ELSE 0    END as "50x75_1",
    CASE WHEN prod.productid=14 THEN count(prod.productid) ELSE 0    END as "50x75_2",
    CASE WHEN prod.productid=15 THEN count(prod.productid) ELSE 0    END as "MousePad_1",
    CASE WHEN prod.productid=16 THEN count(prod.productid) ELSE 0    END as "MousePad_2",
    CASE WHEN prod.productid=17 THEN count(prod.productid) ELSE 0    END as "DigiFoto_1",
    CASE WHEN prod.productid=18 THEN count(prod.productid) ELSE 0    END as "DigiFoto_2",
    CASE WHEN prod.productid=19 THEN count(prod.productid) ELSE 0    END as "DigitalNegative_1",
    CASE WHEN prod.productid=20 THEN count(prod.productid) ELSE 0    END as "DigitalNegative_2",
    sum (prod.oipspricechf / 100.0) * quantity as "TOTAL"
    from orderitems oi
    inner join orders on oi.orderid = orders.orderid
    inner join customer on orders.customerid = customer.customerid
    inner join photos p on p.photoid = oi.photoid
    inner join products prod on oi.productid = prod.productid
    inner join genericlevels album on p.albumid = album.genericlevelid
    inner join genericlevels event on album.eventid = event.genericlevelid
    group by event,album,prod.productid,quantity,orders.uploadcompleteddate,album.genericlevelid,orders.orderid,customer.lastname,country
    order by event,album;

--
-- consolidated count of product sales by date; products consolidated in columns
-- (column "TOTAL_Best." has misleading title: it's the count for all different products in this order. do we need that at all?)
--
drop view vReportConsProdCountByOrder cascade;
CREATE OR REPLACE VIEW vReportConsProdCountByOrder as
Select event,album,albumid,date,orderid,country,
	CASE WHEN country='CHE' THEN orderid END  as "orderid_chf",
	CASE WHEN country='DEU' THEN orderid END  as "orderid_eur",
	CASE WHEN country='CHE' THEN sum(quantity * "10-er_1" + quantity * "10-er_2") ELSE 0 END  as "prod10_er_chf",
	CASE WHEN country='CHE' THEN sum(quantity * "11-er_1" + quantity * "11-er_2") ELSE 0 END  as "prod11_er_chf",
	CASE WHEN country='CHE' THEN sum(quantity * "13-er_1" + quantity * "13-er_2") ELSE 0 END  as "prod13_er_chf",
	CASE WHEN country='CHE' THEN sum(quantity * "20-er_1" + quantity * "20-er_2") ELSE 0 END  as "prod20_er_chf",
	CASE WHEN country='CHE' THEN sum(quantity * "30x45_1" + quantity * "30x45_2") ELSE 0 END  as "prod30x45_chf",
	CASE WHEN country='CHE' THEN sum(quantity * "40x60_1" + quantity * "40x60_2") ELSE 0 END  as "prod40x60_chf",
	CASE WHEN country='CHE' THEN sum(quantity * "50x75_1" + quantity * "50x75_2") ELSE 0 END  as "prod50x75_chf",
	CASE WHEN country='CHE' THEN sum(quantity * "MousePad_1" + quantity * "MousePad_2") ELSE 0 END  as "prodMousepad_chf",
	CASE WHEN country='CHE' THEN sum(quantity * "DigiFoto_1" + quantity * "DigiFoto_2") ELSE 0 END  as "prodDigiFoto_chf",
	CASE WHEN country='CHE' THEN sum(quantity * "DigitalNegative_1" + quantity * "DigitalNegative_2") ELSE 0 END  as "prodDigitalNegative_chf",
	CASE WHEN country='DEU' THEN sum(quantity * "10-er_1" + quantity * "10-er_2") ELSE 0 END  as "prod10_er_eur",
	CASE WHEN country='DEU' THEN sum(quantity * "11-er_1" + quantity * "11-er_2") ELSE 0 END  as "prod11_er_eur",
	CASE WHEN country='DEU' THEN sum(quantity * "13-er_1" + quantity * "13-er_2") ELSE 0 END  as "prod13_er_eur",
	CASE WHEN country='DEU' THEN sum(quantity * "20-er_1" + quantity * "20-er_2") ELSE 0 END  as "prod20_er_eur",
	CASE WHEN country='DEU' THEN sum(quantity * "30x45_1" + quantity * "30x45_2") ELSE 0 END  as "prod30x45_eur",
	CASE WHEN country='DEU' THEN sum(quantity * "40x60_1" + quantity * "40x60_2") ELSE 0 END  as "prod40x60_eur",
	CASE WHEN country='DEU' THEN sum(quantity * "50x75_1" + quantity * "50x75_2") ELSE 0 END  as "prod50x75_eur",
	CASE WHEN country='DEU' THEN sum(quantity * "MousePad_1" + quantity * "MousePad_2") ELSE 0 END  as "prodMousepad_eur",
	CASE WHEN country='DEU' THEN sum(quantity * "DigiFoto_1" + quantity * "DigiFoto_2") ELSE 0 END  as "prodDigiFoto_eur",
	CASE WHEN country='DEU' THEN sum(quantity * "DigitalNegative_1" + quantity * "DigitalNegative_2") ELSE 0 END  as "prodDigitalNegative_eur",
	CASE WHEN country='CHE' THEN sum("TOTAL") ELSE 0 END  as "TOTAL_CHF",
	CASE WHEN country='DEU' THEN sum("TOTAL") ELSE 0 END  as "TOTAL_EUR"
from vReportProdCount
group by event,album,albumid,date,orderid,country
order by event, album;



--
-- all consolidated product counts by album; include calculations -- is this used ????????
--
drop view vReportAllConsProdCount;
CREATE OR REPLACE VIEW vReportAllConsProdCount AS
select event,album,albumid,
	sum("prod10_er") as "prod10_er",sum("prod11_er") as "prod11_er",sum("prod13_er") as "prod13_er",sum("prod20_er") as "prod20_er",sum("prod30x45") as "prod30x45",sum("prod40x60") as "prod40x60",sum("prod50x75") as "prod50x75",sum("prodMousepad") as "prodMousepad",
	(sum("prod10_er") + sum("prod11_er") + sum("prod13_er") + sum("prod20_er") + sum("prod30x45") + sum("prod40x60") + sum("prod50x75") + sum("prodMousepad")) as "TOTAL_PHOTOS",
	count("orderid") as "TOTAL_BEST_PER_ALBUM",
  	sum("TOTAL_CHF") as "TOTAL_CHF_PER_ALBUM",
	(sum("prod10_er") + sum("prod11_er") + sum("prod13_er") + sum("prod20_er") + sum("prod30x45") + sum("prod40x60") + sum("prod50x75") + sum("prodMousepad")) / count("orderid") as "PHOTOS_PER_ORDER",
	sum("TOTAL_CHF") / count("orderid")  as "CHF_PER_ORDER"
from vReportConsProdCountByOrder
group by event,album,albumid
order by event,album;

--
-- all consolidated product counts by date; include calculations;include date (can be used to make queries by date)
--
CREATE OR REPLACE VIEW vReportAllConsProdCountDate AS
select date,event,album,albumid,
	sum("prod10_er_chf") as "prod10_er_chf",sum("prod10_er_eur") as "prod10_er_eur",sum("prod11_er_chf") as "prod11_er_chf",sum("prod11_er_eur") as "prod11_er_eur",sum("prod13_er_chf") as "prod13_er_chf",sum("prod13_er_eur") as "prod13_er_eur",sum("prod20_er_chf") as "prod20_er_chf",sum("prod20_er_eur") as "prod20_er_eur",sum("prod30x45_chf") as "prod30x45_chf",sum("prod30x45_eur") as "prod30x45_eur",sum("prod40x60_chf") as "prod40x60_chf",sum("prod40x60_eur") as "prod40x60_eur",sum("prod50x75_chf") as "prod50x75_chf",sum("prod50x75_eur") as "prod50x75_eur",sum("prodMousepad_chf") as "prodMousepad_chf",sum("prodMousepad_eur") as "prodMousepad_eur",sum("prodDigiFoto_chf") as "prodDigiFoto_chf",sum("prodDigiFoto_eur") as "prodDigiFoto_eur",sum("prodDigitalNegative_chf") as "prodDigitalNegative_chf",sum("prodDigitalNegative_eur") as "prodDigitalNegative_eur",
	(sum("prod10_er_chf") + sum("prod11_er_chf") + sum("prod13_er_chf") + sum("prod20_er_chf") + sum("prod30x45_chf") + sum("prod40x60_chf") + sum("prod50x75_chf") + sum("prodMousepad_chf") +sum("prodDigiFoto_chf") +sum("prodDigitalNegative_chf")) as "TOTAL_PHOTOS_CHF",
	(sum("prod10_er_eur") + sum("prod11_er_eur") + sum("prod13_er_eur") + sum("prod20_er_eur") + sum("prod30x45_eur") + sum("prod40x60_eur") + sum("prod50x75_eur") + sum("prodMousepad_eur") +sum("prodDigiFoto_eur") +sum("prodDigitalNegative_eur")) as "TOTAL_PHOTOS_EUR",
	count("orderid_chf") as "TOTAL_BEST_PER_ALBUM_CHF",
	count("orderid_eur") as "TOTAL_BEST_PER_ALBUM_EUR",
  	sum("TOTAL_CHF") as "TOTAL_PER_ALBUM_CHF",
  	sum("TOTAL_EUR") as "TOTAL_PER_ALBUM_EUR"
from vReportConsProdCountByOrder
group by date,event,album,albumid
order by event,album;


--
-- Example Query for reporting over a date-range:
--
select event,album, sum(vreportconsprodcountbyorder."prod10_er") AS "prod10_er", sum(vreportconsprodcountbyorder."prod11_er") AS "prod11_er", sum(vreportconsprodcountbyorder."prod13_er") AS "prod13_er", sum(vreportconsprodcountbyorder."prod20_er") AS "prod20_er", sum(vreportconsprodcountbyorder."prod30x45") AS "prod30x45", sum(vreportconsprodcountbyorder."prod40x60") AS "prod40x60", sum(vreportconsprodcountbyorder."prod50x75") AS "50x70", sum(vreportconsprodcountbyorder."prodMousepad") AS "prodMousepad"
from vReportConsProdCountByOrder
where date between '2006-01-01' and '2006-02-01'
group by event,album
order by event,album

--
--
-- New Strategy: only take care of number of product sales; do all the calculation seperatly
--
--

--
-- all consolidated product counts by album; no calculations
-- can also use a 'date' in the where clause
--
drop view vReportAllConsProdCount;
CREATE OR REPLACE VIEW vReportAllConsProdCount AS
Select event,album,albumid,
	sum(quantity * "10-er_CHF10" + quantity * "10-er_CHF5") as "prod10_er",
	sum(quantity * "11-er_CHF5.5" + quantity * "11-er_CHF12") as "prod11_er",
	sum(quantity * "13-er_CHF7" + quantity * "13-er_CHF14") as "prod13_er",
	sum(quantity * "20-er_CHF14" + quantity * "20-er_CHF28") as "prod20_er",
	sum(quantity * "30x45_CHF29" + quantity * "30x45_CHF49") as "prod30x45",
	sum(quantity * "40x60_CHF42" + quantity * "40x60_CHF79") as "prod40x60",
	sum(quantity * "50x75_CHF54" + quantity * "50x75_CHF99") as "prod50x75",
	sum(quantity * "MousePad_CHF29" + quantity * "MousePad_CHF39") as "prodMousepad"

from vReportProdCount
group by event,album,albumid
order by event, album;


--
-- Example Query for reporting over a date-range:
--
select *
from vReportConsProdCount
where date between '2006-01-01' and '2006-02-01'
group by event,album
order by event,album
